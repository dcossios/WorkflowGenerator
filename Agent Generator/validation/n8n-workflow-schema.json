{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "n8n Workflow Schema",
  "description": "JSON schema for validating n8n workflow files",
  "type": "object",
  "required": ["name", "nodes", "connections"],
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the workflow",
      "minLength": 1,
      "maxLength": 100
    },
    "active": {
      "type": "boolean",
      "description": "Whether the workflow is active",
      "default": false
    },
    "nodes": {
      "type": "array",
      "description": "Array of nodes in the workflow",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "name", "type", "typeVersion", "position"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the node",
            "pattern": "^[a-zA-Z0-9_-]+$"
          },
          "name": {
            "type": "string",
            "description": "Display name of the node",
            "minLength": 1,
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "description": "The node type identifier",
            "pattern": "^[a-zA-Z0-9@_.-]+$"
          },
          "typeVersion": {
            "type": "number",
            "description": "Version of the node type",
            "minimum": 1
          },
          "position": {
            "type": "array",
            "description": "Position coordinates [x, y]",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "parameters": {
            "type": "object",
            "description": "Node-specific parameters",
            "additionalProperties": true
          },
          "credentials": {
            "type": "object",
            "description": "Credentials configuration for the node",
            "additionalProperties": true
          },
          "webhookId": {
            "type": "string",
            "description": "Webhook ID for webhook trigger nodes"
          },
          "disabled": {
            "type": "boolean",
            "description": "Whether the node is disabled",
            "default": false
          },
          "notes": {
            "type": "string",
            "description": "Notes about the node"
          },
          "continueOnFail": {
            "type": "boolean",
            "description": "Whether to continue on node failure",
            "default": false
          },
          "alwaysOutputData": {
            "type": "boolean",
            "description": "Whether to always output data",
            "default": false
          },
          "executeOnce": {
            "type": "boolean",
            "description": "Whether to execute only once",
            "default": false
          }
        },
        "additionalProperties": false
      }
    },
    "connections": {
      "type": "object",
      "description": "Connections between nodes",
      "patternProperties": {
        "^[a-zA-Z0-9 _-]+$": {
          "type": "object",
          "properties": {
            "main": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["node", "type", "index"],
                  "properties": {
                    "node": {
                      "type": "string",
                      "description": "Name of the target node"
                    },
                    "type": {
                      "type": "string",
                      "description": "Connection type",
                      "enum": ["main", "ai_languageModel", "ai_tool", "ai_memory", "ai_outputParser"]
                    },
                    "index": {
                      "type": "number",
                      "description": "Connection index",
                      "minimum": 0
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "ai_languageModel": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["node", "type", "index"],
                  "properties": {
                    "node": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["ai_languageModel"]
                    },
                    "index": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                }
              }
            },
            "ai_tool": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["node", "type", "index"],
                  "properties": {
                    "node": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["ai_tool"]
                    },
                    "index": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "settings": {
      "type": "object",
      "description": "Workflow execution settings",
      "properties": {
        "executionOrder": {
          "type": "string",
          "enum": ["v0", "v1"],
          "description": "Execution order version"
        },
        "saveManualExecutions": {
          "type": "boolean",
          "description": "Whether to save manual executions"
        },
        "callerPolicy": {
          "type": "string",
          "description": "Caller policy for the workflow"
        },
        "errorWorkflow": {
          "type": "string",
          "description": "Error workflow ID"
        }
      },
      "additionalProperties": false
    },
    "staticData": {
      "description": "Static data for the workflow",
      "oneOf": [
        {"type": "null"},
        {"type": "object"}
      ]
    },
    "tags": {
      "type": "array",
      "description": "Tags for categorizing the workflow",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$"
      },
      "uniqueItems": true
    },
    "triggerCount": {
      "type": "number",
      "description": "Number of trigger nodes",
      "minimum": 0
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp"
    },
    "versionId": {
      "type": "string",
      "description": "Version identifier"
    },
    "pinData": {
      "type": "object",
      "description": "Pinned data for nodes",
      "additionalProperties": true
    },
    "meta": {
      "type": "object",
      "description": "Metadata about the workflow",
      "additionalProperties": true
    }
  },
  "additionalProperties": false,
  "definitions": {
    "nodeTypes": {
      "trigger": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.chatTrigger",
        "n8n-nodes-base.emailTrigger"
      ],
      "regular": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.airtable"
      ],
      "ai": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.openAi"
      ]
    }
  }
} 