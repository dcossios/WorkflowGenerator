{
  "name": "AI Chat Agent with Context",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "chat-trigger",
      "name": "Chat Trigger",
      "type": "n8n-nodes-base.chatTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "user-context",
              "name": "userMessage",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{ $json.sessionId || 'default' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-context",
      "name": "Extract Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://api.example.com/context/{{ $json.sessionId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_API_TOKEN"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "fetch-context",
      "name": "Fetch User Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "text": "={{ $('Extract Context').item.json.userMessage }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful AI assistant with access to user context and conversation history. Provide thoughtful, contextual responses based on the user's message and any available context data.\n\nUser Context: {{ $('Fetch User Context').item.json.context || 'No previous context available' }}\nTimestamp: {{ $('Extract Context').item.json.timestamp }}\nSession ID: {{ $('Extract Context').item.json.sessionId }}"
        }
      },
      "id": "ai-agent",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 0.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {
          "temperature": 0.7,
          "maxTokens": 1000
        }
      },
      "id": "openai-chat-model",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [900, 180]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ai-response",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            },
            {
              "id": "response-timestamp",
              "name": "respondedAt",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            },
            {
              "id": "token-usage",
              "name": "tokenUsage",
              "value": "={{ $json.usageMetadata || {} }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.example.com/context/{{ $('Extract Context').item.json.sessionId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR_API_TOKEN"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"userMessage\": {{ $('Extract Context').item.json.userMessage }},\n  \"aiResponse\": {{ $json.response }},\n  \"timestamp\": {{ $json.respondedAt }},\n  \"tokenUsage\": {{ $json.tokenUsage }}\n}",
        "options": {}
      },
      "id": "save-context",
      "name": "Save Conversation Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "error-check",
              "leftValue": "={{ $('AI Agent').item.json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-for-errors",
      "name": "Check for Errors",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 500]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-response",
              "name": "response",
              "value": "I apologize, but I encountered an error while processing your request. Please try again or rephrase your question.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "error-fallback",
      "name": "Error Fallback",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1340, 500]
    }
  ],
  "connections": {
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "Extract Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Context": {
      "main": [
        [
          {
            "node": "Fetch User Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch User Context": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check for Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Save Conversation Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Errors": {
      "main": [
        [
          {
            "node": "Error Fallback",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["ai", "chat", "assistant", "conversational", "template"],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "template-v1"
} 